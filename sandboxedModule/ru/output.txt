./application.js 13:46:39 From application global context
./application.js 13:46:39 My 2 task
./application.js 13:46:39 From application exported function
./application.js 13:46:40 some text from setInterval
./application.js 13:46:40 some text from setTimeout
./application.js 13:46:41 some text from setInterval
./application.js 13:46:42 some text from setInterval
./application.js 13:46:43 some text from setInterval
./application.js 13:46:44 some text from setInterval
./application.js 13:48:31 From application global context
./application.js 13:48:31 My 2 task
./application.js 13:48:31 From application exported function
./application.js 13:48:32 some text from setInterval
./application.js 13:48:32 some text from setTimeout
./application.js 13:48:33 some text from setInterval
./application.js 13:48:34 some text from setInterval
./application.js 13:48:35 some text from setInterval
./application.js 13:53:38 From application global context
./application.js 13:53:38 My 2 task
./application.js 13:53:38 From application exported function
./application.js 13:53:39 some text from setTimeout
./application.js 13:53:39 some text from setInterval
./application.js 13:53:40 some text from setInterval
./application.js 13:53:41 some text from setInterval
./application.js 13:53:42 some text from setInterval
./application.js 13:53:56 From application global context
./application.js 13:53:56 My 2 task
./application.js 13:53:56 From application exported function
./application.js 13:53:57 some text from setTimeout
./application.js 13:53:57 some text from setInterval
./application.js 13:54:46 From application global context
./application.js 13:54:46 My 2 task
./application.js 13:54:46 From application exported function
./application.js 13:54:47 some text from setInterval
./application.js 13:54:47 some text from setTimeout
./application.js 13:59:13 From application global context
./application.js 13:59:13 My 2 task
./application.js 13:59:13 From application exported function
./application.js 13:59:14 some text from setInterval
./application.js 13:59:14 some text from setTimeout
./application.js 14:05:04 From application global context
./application.js 14:05:04 My 2 task
./application.js 14:05:04 From application exported function
./application.js 14:05:05 some text from setInterval
./application.js 14:05:05 some text from setTimeout
./application.js 14:05:06 some text from setInterval
./application.js 14:06:55 From application global context
./application.js 14:06:55 My 2 task
./application.js 14:06:55 From application exported function
./application.js 14:06:56 some text from setInterval
./application.js 14:06:56 some text from setTimeout
./application.js 14:06:57 some text from setInterval
./application.js 14:07:42 From application global context
./application.js 14:07:42 My 2 task
./application.js 14:07:42 From application exported function
./application.js 14:07:42 { str: 'My 2 task',
  fs: 
   { Stats: [Function],
     F_OK: 0,
     R_OK: 4,
     W_OK: 2,
     X_OK: 1,
     access: [Function],
     accessSync: [Function],
     exists: [Function],
     existsSync: [Function],
     readFile: [Function],
     readFileSync: [Function],
     close: [Function],
     closeSync: [Function],
     open: [Function],
     openSync: [Function],
     read: [Function],
     readSync: [Function],
     write: [Function],
     writeSync: [Function],
     rename: [Function],
     renameSync: [Function],
     truncate: [Function],
     truncateSync: [Function],
     ftruncate: [Function],
     ftruncateSync: [Function],
     rmdir: [Function],
     rmdirSync: [Function],
     fdatasync: [Function],
     fdatasyncSync: [Function],
     fsync: [Function],
     fsyncSync: [Function],
     mkdir: [Function],
     mkdirSync: [Function],
     readdir: [Function],
     readdirSync: [Function],
     fstat: [Function],
     lstat: [Function],
     stat: [Function],
     fstatSync: [Function],
     lstatSync: [Function],
     statSync: [Function],
     readlink: [Function],
     readlinkSync: [Function],
     symlink: [Function],
     symlinkSync: [Function],
     link: [Function],
     linkSync: [Function],
     unlink: [Function],
     unlinkSync: [Function],
     fchmod: [Function],
     fchmodSync: [Function],
     chmod: [Function],
     chmodSync: [Function],
     fchown: [Function],
     fchownSync: [Function],
     chown: [Function],
     chownSync: [Function],
     _toUnixTimestamp: [Function: toUnixTimestamp],
     utimes: [Function],
     utimesSync: [Function],
     futimes: [Function],
     futimesSync: [Function],
     writeFile: [Function],
     writeFileSync: [Function],
     appendFile: [Function],
     appendFileSync: [Function],
     watch: [Function],
     watchFile: [Function],
     unwatchFile: [Function],
     realpathSync: [Function: realpathSync],
     realpath: [Function: realpath],
     createReadStream: [Function],
     ReadStream: { [Function: ReadStream] super_: [Object] },
     FileReadStream: { [Function: ReadStream] super_: [Object] },
     createWriteStream: [Function],
     WriteStream: { [Function: WriteStream] super_: [Object] },
     FileWriteStream: { [Function: WriteStream] super_: [Object] } },
  module: { exports: { [Function] func: [Function] } },
  console: 
   { log: [Function],
     info: [Function: bound ],
     warn: [Function: bound ],
     error: [Function: bound ],
     dir: [Function: bound ],
     time: [Function: bound ],
     timeEnd: [Function: bound ],
     trace: [Function: bound trace],
     assert: [Function: bound ],
     Console: [Function: Console] },
  setTimeout: [Function],
  setInterval: [Function],
  util: 
   { format: [Function],
     deprecate: [Function],
     debuglog: [Function],
     inspect: { [Function: inspect] colors: [Object], styles: [Object] },
     isArray: [Function: isArray],
     isBoolean: [Function: isBoolean],
     isNull: [Function: isNull],
     isNullOrUndefined: [Function: isNullOrUndefined],
     isNumber: [Function: isNumber],
     isString: [Function: isString],
     isSymbol: [Function: isSymbol],
     isUndefined: [Function: isUndefined],
     isRegExp: [Function: isRegExp],
     isObject: [Function: isObject],
     isDate: [Function: isDate],
     isError: [Function: isError],
     isFunction: [Function: isFunction],
     isPrimitive: [Function: isPrimitive],
     isBuffer: [Function: isBuffer],
     log: [Function],
     inherits: [Function],
     _extend: [Function],
     p: [Function: deprecated],
     exec: [Function: deprecated],
     print: [Function: deprecated],
     puts: [Function: deprecated],
     debug: [Function: deprecated],
     error: [Function: deprecated],
     pump: [Function: deprecated],
     _errnoException: [Function],
     _exceptionWithHostPort: [Function] },
  require: [Function: sixthTask],
  global: [Circular] }
./application.js 14:07:43 some text from setInterval
./application.js 14:07:43 some text from setTimeout
./application.js 14:07:44 some text from setInterval
./application.js 14:09:44 From application global context
./application.js 14:09:44 My 2 nd task
./application.js 14:09:44 From application exported function
./application.js 14:09:44 Nineth task: { str: 'My 2 nd task',
  fs: 
   { Stats: [Function],
     F_OK: 0,
     R_OK: 4,
     W_OK: 2,
     X_OK: 1,
     access: [Function],
     accessSync: [Function],
     exists: [Function],
     existsSync: [Function],
     readFile: [Function],
     readFileSync: [Function],
     close: [Function],
     closeSync: [Function],
     open: [Function],
     openSync: [Function],
     read: [Function],
     readSync: [Function],
     write: [Function],
     writeSync: [Function],
     rename: [Function],
     renameSync: [Function],
     truncate: [Function],
     truncateSync: [Function],
     ftruncate: [Function],
     ftruncateSync: [Function],
     rmdir: [Function],
     rmdirSync: [Function],
     fdatasync: [Function],
     fdatasyncSync: [Function],
     fsync: [Function],
     fsyncSync: [Function],
     mkdir: [Function],
     mkdirSync: [Function],
     readdir: [Function],
     readdirSync: [Function],
     fstat: [Function],
     lstat: [Function],
     stat: [Function],
     fstatSync: [Function],
     lstatSync: [Function],
     statSync: [Function],
     readlink: [Function],
     readlinkSync: [Function],
     symlink: [Function],
     symlinkSync: [Function],
     link: [Function],
     linkSync: [Function],
     unlink: [Function],
     unlinkSync: [Function],
     fchmod: [Function],
     fchmodSync: [Function],
     chmod: [Function],
     chmodSync: [Function],
     fchown: [Function],
     fchownSync: [Function],
     chown: [Function],
     chownSync: [Function],
     _toUnixTimestamp: [Function: toUnixTimestamp],
     utimes: [Function],
     utimesSync: [Function],
     futimes: [Function],
     futimesSync: [Function],
     writeFile: [Function],
     writeFileSync: [Function],
     appendFile: [Function],
     appendFileSync: [Function],
     watch: [Function],
     watchFile: [Function],
     unwatchFile: [Function],
     realpathSync: [Function: realpathSync],
     realpath: [Function: realpath],
     createReadStream: [Function],
     ReadStream: { [Function: ReadStream] super_: [Object] },
     FileReadStream: { [Function: ReadStream] super_: [Object] },
     createWriteStream: [Function],
     WriteStream: { [Function: WriteStream] super_: [Object] },
     FileWriteStream: { [Function: WriteStream] super_: [Object] } },
  module: { exports: { [Function] func: [Function] } },
  console: 
   { log: [Function],
     info: [Function: bound ],
     warn: [Function: bound ],
     error: [Function: bound ],
     dir: [Function: bound ],
     time: [Function: bound ],
     timeEnd: [Function: bound ],
     trace: [Function: bound trace],
     assert: [Function: bound ],
     Console: [Function: Console] },
  setTimeout: [Function],
  setInterval: [Function],
  util: 
   { format: [Function],
     deprecate: [Function],
     debuglog: [Function],
     inspect: { [Function: inspect] colors: [Object], styles: [Object] },
     isArray: [Function: isArray],
     isBoolean: [Function: isBoolean],
     isNull: [Function: isNull],
     isNullOrUndefined: [Function: isNullOrUndefined],
     isNumber: [Function: isNumber],
     isString: [Function: isString],
     isSymbol: [Function: isSymbol],
     isUndefined: [Function: isUndefined],
     isRegExp: [Function: isRegExp],
     isObject: [Function: isObject],
     isDate: [Function: isDate],
     isError: [Function: isError],
     isFunction: [Function: isFunction],
     isPrimitive: [Function: isPrimitive],
     isBuffer: [Function: isBuffer],
     log: [Function],
     inherits: [Function],
     _extend: [Function],
     p: [Function: deprecated],
     exec: [Function: deprecated],
     print: [Function: deprecated],
     puts: [Function: deprecated],
     debug: [Function: deprecated],
     error: [Function: deprecated],
     pump: [Function: deprecated],
     _errnoException: [Function],
     _exceptionWithHostPort: [Function] },
  require: [Function: sixthTask],
  global: [Circular] }
./application.js 14:09:45 some text from setInterval
./application.js 14:09:45 some text from setTimeout
./application.js 14:09:56 From application global context
./application.js 14:09:56 My 2 nd task
./application.js 14:09:56 From application exported function
./application.js 14:12:01 From application global context
./application.js 14:12:01 My 2 nd task
./application.js 14:12:01 From application exported function
./application.js 14:12:02 some text from setTimeout
./application.js 14:12:02 some text from setInterval
./application.js 14:12:03 some text from setInterval
./application.js 14:12:31 From application global context
./application.js 14:12:31 My 2 nd task
./application.js 14:12:31 From application exported function
./application.js 14:12:32 some text from setInterval
./application.js 14:12:32 some text from setTimeout
./application.js 14:13:08 From application global context
./application.js 14:13:08 My 2nd task
./application.js 14:13:08 From application exported function
./application.js 14:13:08 Nineth task: { str: 'My 2nd task',
  fs: 
   { Stats: [Function],
     F_OK: 0,
     R_OK: 4,
     W_OK: 2,
     X_OK: 1,
     access: [Function],
     accessSync: [Function],
     exists: [Function],
     existsSync: [Function],
     readFile: [Function],
     readFileSync: [Function],
     close: [Function],
     closeSync: [Function],
     open: [Function],
     openSync: [Function],
     read: [Function],
     readSync: [Function],
     write: [Function],
     writeSync: [Function],
     rename: [Function],
     renameSync: [Function],
     truncate: [Function],
     truncateSync: [Function],
     ftruncate: [Function],
     ftruncateSync: [Function],
     rmdir: [Function],
     rmdirSync: [Function],
     fdatasync: [Function],
     fdatasyncSync: [Function],
     fsync: [Function],
     fsyncSync: [Function],
     mkdir: [Function],
     mkdirSync: [Function],
     readdir: [Function],
     readdirSync: [Function],
     fstat: [Function],
     lstat: [Function],
     stat: [Function],
     fstatSync: [Function],
     lstatSync: [Function],
     statSync: [Function],
     readlink: [Function],
     readlinkSync: [Function],
     symlink: [Function],
     symlinkSync: [Function],
     link: [Function],
     linkSync: [Function],
     unlink: [Function],
     unlinkSync: [Function],
     fchmod: [Function],
     fchmodSync: [Function],
     chmod: [Function],
     chmodSync: [Function],
     fchown: [Function],
     fchownSync: [Function],
     chown: [Function],
     chownSync: [Function],
     _toUnixTimestamp: [Function: toUnixTimestamp],
     utimes: [Function],
     utimesSync: [Function],
     futimes: [Function],
     futimesSync: [Function],
     writeFile: [Function],
     writeFileSync: [Function],
     appendFile: [Function],
     appendFileSync: [Function],
     watch: [Function],
     watchFile: [Function],
     unwatchFile: [Function],
     realpathSync: [Function: realpathSync],
     realpath: [Function: realpath],
     createReadStream: [Function],
     ReadStream: { [Function: ReadStream] super_: [Object] },
     FileReadStream: { [Function: ReadStream] super_: [Object] },
     createWriteStream: [Function],
     WriteStream: { [Function: WriteStream] super_: [Object] },
     FileWriteStream: { [Function: WriteStream] super_: [Object] } },
  module: { exports: { [Function] func: [Function] } },
  console: 
   { log: [Function],
     info: [Function: bound ],
     warn: [Function: bound ],
     error: [Function: bound ],
     dir: [Function: bound ],
     time: [Function: bound ],
     timeEnd: [Function: bound ],
     trace: [Function: bound trace],
     assert: [Function: bound ],
     Console: [Function: Console] },
  setTimeout: [Function],
  setInterval: [Function],
  util: 
   { format: [Function],
     deprecate: [Function],
     debuglog: [Function],
     inspect: { [Function: inspect] colors: [Object], styles: [Object] },
     isArray: [Function: isArray],
     isBoolean: [Function: isBoolean],
     isNull: [Function: isNull],
     isNullOrUndefined: [Function: isNullOrUndefined],
     isNumber: [Function: isNumber],
     isString: [Function: isString],
     isSymbol: [Function: isSymbol],
     isUndefined: [Function: isUndefined],
     isRegExp: [Function: isRegExp],
     isObject: [Function: isObject],
     isDate: [Function: isDate],
     isError: [Function: isError],
     isFunction: [Function: isFunction],
     isPrimitive: [Function: isPrimitive],
     isBuffer: [Function: isBuffer],
     log: [Function],
     inherits: [Function],
     _extend: [Function],
     p: [Function: deprecated],
     exec: [Function: deprecated],
     print: [Function: deprecated],
     puts: [Function: deprecated],
     debug: [Function: deprecated],
     error: [Function: deprecated],
     pump: [Function: deprecated],
     _errnoException: [Function],
     _exceptionWithHostPort: [Function] },
  require: [Function: sixthTask],
  global: [Circular] }
./application.js 14:13:09 some text from setInterval
./application.js 14:13:09 some text from setTimeout
./application.js 14:13:10 some text from setInterval
./application.js 14:14:55 From application global context
./application.js 14:14:55 My 2nd task
./application.js 14:14:55 From application exported function
./application.js 14:14:55 Nineth task: { str: 'My 2nd task',
  fs: 
   { Stats: [Function],
     F_OK: 0,
     R_OK: 4,
     W_OK: 2,
     X_OK: 1,
     access: [Function],
     accessSync: [Function],
     exists: [Function],
     existsSync: [Function],
     readFile: [Function],
     readFileSync: [Function],
     close: [Function],
     closeSync: [Function],
     open: [Function],
     openSync: [Function],
     read: [Function],
     readSync: [Function],
     write: [Function],
     writeSync: [Function],
     rename: [Function],
     renameSync: [Function],
     truncate: [Function],
     truncateSync: [Function],
     ftruncate: [Function],
     ftruncateSync: [Function],
     rmdir: [Function],
     rmdirSync: [Function],
     fdatasync: [Function],
     fdatasyncSync: [Function],
     fsync: [Function],
     fsyncSync: [Function],
     mkdir: [Function],
     mkdirSync: [Function],
     readdir: [Function],
     readdirSync: [Function],
     fstat: [Function],
     lstat: [Function],
     stat: [Function],
     fstatSync: [Function],
     lstatSync: [Function],
     statSync: [Function],
     readlink: [Function],
     readlinkSync: [Function],
     symlink: [Function],
     symlinkSync: [Function],
     link: [Function],
     linkSync: [Function],
     unlink: [Function],
     unlinkSync: [Function],
     fchmod: [Function],
     fchmodSync: [Function],
     chmod: [Function],
     chmodSync: [Function],
     fchown: [Function],
     fchownSync: [Function],
     chown: [Function],
     chownSync: [Function],
     _toUnixTimestamp: [Function: toUnixTimestamp],
     utimes: [Function],
     utimesSync: [Function],
     futimes: [Function],
     futimesSync: [Function],
     writeFile: [Function],
     writeFileSync: [Function],
     appendFile: [Function],
     appendFileSync: [Function],
     watch: [Function],
     watchFile: [Function],
     unwatchFile: [Function],
     realpathSync: [Function: realpathSync],
     realpath: [Function: realpath],
     createReadStream: [Function],
     ReadStream: { [Function: ReadStream] super_: [Object] },
     FileReadStream: { [Function: ReadStream] super_: [Object] },
     createWriteStream: [Function],
     WriteStream: { [Function: WriteStream] super_: [Object] },
     FileWriteStream: { [Function: WriteStream] super_: [Object] } },
  module: { exports: { [Function] func: [Function] } },
  console: 
   { log: [Function],
     info: [Function: bound ],
     warn: [Function: bound ],
     error: [Function: bound ],
     dir: [Function: bound ],
     time: [Function: bound ],
     timeEnd: [Function: bound ],
     trace: [Function: bound trace],
     assert: [Function: bound ],
     Console: [Function: Console] },
  setTimeout: [Function],
  setInterval: [Function],
  util: 
   { format: [Function],
     deprecate: [Function],
     debuglog: [Function],
     inspect: { [Function: inspect] colors: [Object], styles: [Object] },
     isArray: [Function: isArray],
     isBoolean: [Function: isBoolean],
     isNull: [Function: isNull],
     isNullOrUndefined: [Function: isNullOrUndefined],
     isNumber: [Function: isNumber],
     isString: [Function: isString],
     isSymbol: [Function: isSymbol],
     isUndefined: [Function: isUndefined],
     isRegExp: [Function: isRegExp],
     isObject: [Function: isObject],
     isDate: [Function: isDate],
     isError: [Function: isError],
     isFunction: [Function: isFunction],
     isPrimitive: [Function: isPrimitive],
     isBuffer: [Function: isBuffer],
     log: [Function],
     inherits: [Function],
     _extend: [Function],
     p: [Function: deprecated],
     exec: [Function: deprecated],
     print: [Function: deprecated],
     puts: [Function: deprecated],
     debug: [Function: deprecated],
     error: [Function: deprecated],
     pump: [Function: deprecated],
     _errnoException: [Function],
     _exceptionWithHostPort: [Function] },
  require: [Function: sixthTask],
  global: [Circular] }
./application.js 14:14:56 some text from setInterval
./application.js 14:14:56 some text from setTimeout
./application.js 14:14:57 some text from setInterval
